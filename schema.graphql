# This file was generated based on "Jmix model". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

"Mutation root"
type Mutation {
    delete_sec_ResourcePolicyEntity(id: String!): Void
    delete_sec_ResourceRoleEntity(id: String!): Void
    delete_sec_RoleAssignmentEntity(id: String!): Void
    delete_sec_RowLevelPolicyEntity(id: String!): Void
    delete_sec_RowLevelRoleEntity(id: String!): Void
    delete_sec_UserSubstitutionEntity(id: String!): Void
    delete_ui_FilterConfiguration(id: String!): Void
    delete_ui_Setting(id: String!): Void
    delete_ui_TablePresentation(id: String!): Void
    delete_umgmt_EntityAttributePolicy(id: String!): Void
    delete_umgmt_EntityPolicy(id: String!): Void
    delete_umgmt_MenuPolicy(id: String!): Void
    delete_umgmt_ResourceRole(id: String!): Void
    delete_umgmt_RowLevelPolicy(id: String!): Void
    delete_umgmt_RowLevelRole(id: String!): Void
    delete_umgmt_ScreenPolicy(id: String!): Void
    delete_umgmt_SpecificPolicy(id: String!): Void
    delete_umgmt_User(id: String!): Void
    upsert_sec_ResourcePolicyEntity(resourcePolicyEntity: inp_sec_ResourcePolicyEntity!): sec_ResourcePolicyEntity
    upsert_sec_ResourceRoleEntity(resourceRoleEntity: inp_sec_ResourceRoleEntity!): sec_ResourceRoleEntity
    upsert_sec_RoleAssignmentEntity(roleAssignmentEntity: inp_sec_RoleAssignmentEntity!): sec_RoleAssignmentEntity
    upsert_sec_RowLevelPolicyEntity(rowLevelPolicyEntity: inp_sec_RowLevelPolicyEntity!): sec_RowLevelPolicyEntity
    upsert_sec_RowLevelRoleEntity(rowLevelRoleEntity: inp_sec_RowLevelRoleEntity!): sec_RowLevelRoleEntity
    upsert_sec_UserSubstitutionEntity(userSubstitutionEntity: inp_sec_UserSubstitutionEntity!): sec_UserSubstitutionEntity
    upsert_ui_FilterConfiguration(filterConfiguration: inp_ui_FilterConfiguration!): ui_FilterConfiguration
    upsert_ui_Setting(uiSetting: inp_ui_Setting!): ui_Setting
    upsert_ui_TablePresentation(uiTablePresentation: inp_ui_TablePresentation!): ui_TablePresentation
    upsert_umgmt_EntityAttributePolicy(entityAttributePolicy: inp_umgmt_EntityAttributePolicy!): umgmt_EntityAttributePolicy
    upsert_umgmt_EntityPolicy(entityPolicy: inp_umgmt_EntityPolicy!): umgmt_EntityPolicy
    upsert_umgmt_MenuPolicy(menuPolicy: inp_umgmt_MenuPolicy!): umgmt_MenuPolicy
    upsert_umgmt_ResourceRole(resourceRole: inp_umgmt_ResourceRole!): umgmt_ResourceRole
    upsert_umgmt_RowLevelPolicy(rowLevelPolicy: inp_umgmt_RowLevelPolicy!): umgmt_RowLevelPolicy
    upsert_umgmt_RowLevelRole(rowLevelRole: inp_umgmt_RowLevelRole!): umgmt_RowLevelRole
    upsert_umgmt_ScreenPolicy(screenPolicy: inp_umgmt_ScreenPolicy!): umgmt_ScreenPolicy
    upsert_umgmt_SpecificPolicy(specificPolicy: inp_umgmt_SpecificPolicy!): umgmt_SpecificPolicy
    upsert_umgmt_User(user: inp_umgmt_User!): umgmt_User
}

"Query root"
type Query {
    entityMessages(className: String, locale: String): [gql_MessageDetail]
    enumMessages(className: String, locale: String): [gql_MessageDetail]
    permissions: sec_PermissionConfig
    sec_ResourcePolicyEntityById(id: String!): sec_ResourcePolicyEntity
    sec_ResourcePolicyEntityCount(
        "expressions to compare sec_ResourcePolicyEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_ResourcePolicyEntityFilterCondition]
    ): Long
    sec_ResourcePolicyEntityList(
        "expressions to compare sec_ResourcePolicyEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_ResourcePolicyEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_sec_ResourcePolicyEntityOrderBy
    ): [sec_ResourcePolicyEntity]
    sec_ResourceRoleEntityById(id: String!): sec_ResourceRoleEntity
    sec_ResourceRoleEntityCount(
        "expressions to compare sec_ResourceRoleEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_ResourceRoleEntityFilterCondition]
    ): Long
    sec_ResourceRoleEntityList(
        "expressions to compare sec_ResourceRoleEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_ResourceRoleEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_sec_ResourceRoleEntityOrderBy
    ): [sec_ResourceRoleEntity]
    sec_RoleAssignmentEntityById(id: String!): sec_RoleAssignmentEntity
    sec_RoleAssignmentEntityCount(
        "expressions to compare sec_RoleAssignmentEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_RoleAssignmentEntityFilterCondition]
    ): Long
    sec_RoleAssignmentEntityList(
        "expressions to compare sec_RoleAssignmentEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_RoleAssignmentEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_sec_RoleAssignmentEntityOrderBy
    ): [sec_RoleAssignmentEntity]
    sec_RowLevelPolicyEntityById(id: String!): sec_RowLevelPolicyEntity
    sec_RowLevelPolicyEntityCount(
        "expressions to compare sec_RowLevelPolicyEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_RowLevelPolicyEntityFilterCondition]
    ): Long
    sec_RowLevelPolicyEntityList(
        "expressions to compare sec_RowLevelPolicyEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_RowLevelPolicyEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_sec_RowLevelPolicyEntityOrderBy
    ): [sec_RowLevelPolicyEntity]
    sec_RowLevelRoleEntityById(id: String!): sec_RowLevelRoleEntity
    sec_RowLevelRoleEntityCount(
        "expressions to compare sec_RowLevelRoleEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_RowLevelRoleEntityFilterCondition]
    ): Long
    sec_RowLevelRoleEntityList(
        "expressions to compare sec_RowLevelRoleEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_RowLevelRoleEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_sec_RowLevelRoleEntityOrderBy
    ): [sec_RowLevelRoleEntity]
    sec_UserSubstitutionEntityById(id: String!): sec_UserSubstitutionEntity
    sec_UserSubstitutionEntityCount(
        "expressions to compare sec_UserSubstitutionEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_UserSubstitutionEntityFilterCondition]
    ): Long
    sec_UserSubstitutionEntityList(
        "expressions to compare sec_UserSubstitutionEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_UserSubstitutionEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_sec_UserSubstitutionEntityOrderBy
    ): [sec_UserSubstitutionEntity]
    ui_FilterConfigurationById(id: String!): ui_FilterConfiguration
    ui_FilterConfigurationCount(
        "expressions to compare ui_FilterConfiguration objects, all items are combined with logical 'AND'"
        filter: [inp_ui_FilterConfigurationFilterCondition]
    ): Long
    ui_FilterConfigurationList(
        "expressions to compare ui_FilterConfiguration objects, all items are combined with logical 'AND'"
        filter: [inp_ui_FilterConfigurationFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_ui_FilterConfigurationOrderBy
    ): [ui_FilterConfiguration]
    ui_SettingById(id: String!): ui_Setting
    ui_SettingCount(
        "expressions to compare ui_Setting objects, all items are combined with logical 'AND'"
        filter: [inp_ui_SettingFilterCondition]
    ): Long
    ui_SettingList(
        "expressions to compare ui_Setting objects, all items are combined with logical 'AND'"
        filter: [inp_ui_SettingFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_ui_SettingOrderBy
    ): [ui_Setting]
    ui_TablePresentationById(id: String!): ui_TablePresentation
    ui_TablePresentationCount(
        "expressions to compare ui_TablePresentation objects, all items are combined with logical 'AND'"
        filter: [inp_ui_TablePresentationFilterCondition]
    ): Long
    ui_TablePresentationList(
        "expressions to compare ui_TablePresentation objects, all items are combined with logical 'AND'"
        filter: [inp_ui_TablePresentationFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_ui_TablePresentationOrderBy
    ): [ui_TablePresentation]
    umgmt_EntityAttributePolicyById(id: String!): umgmt_EntityAttributePolicy
    umgmt_EntityAttributePolicyCount(
        "expressions to compare umgmt_EntityAttributePolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_EntityAttributePolicyFilterCondition]
    ): Long
    umgmt_EntityAttributePolicyList(
        "expressions to compare umgmt_EntityAttributePolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_EntityAttributePolicyFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_umgmt_EntityAttributePolicyOrderBy
    ): [umgmt_EntityAttributePolicy]
    umgmt_EntityPolicyById(id: String!): umgmt_EntityPolicy
    umgmt_EntityPolicyCount(
        "expressions to compare umgmt_EntityPolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_EntityPolicyFilterCondition]
    ): Long
    umgmt_EntityPolicyList(
        "expressions to compare umgmt_EntityPolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_EntityPolicyFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_umgmt_EntityPolicyOrderBy
    ): [umgmt_EntityPolicy]
    umgmt_MenuPolicyById(id: String!): umgmt_MenuPolicy
    umgmt_MenuPolicyCount(
        "expressions to compare umgmt_MenuPolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_MenuPolicyFilterCondition]
    ): Long
    umgmt_MenuPolicyList(
        "expressions to compare umgmt_MenuPolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_MenuPolicyFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_umgmt_MenuPolicyOrderBy
    ): [umgmt_MenuPolicy]
    umgmt_ResourceRoleById(id: String!): umgmt_ResourceRole
    umgmt_ResourceRoleCount(
        "expressions to compare umgmt_ResourceRole objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_ResourceRoleFilterCondition]
    ): Long
    umgmt_ResourceRoleList(
        "expressions to compare umgmt_ResourceRole objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_ResourceRoleFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_umgmt_ResourceRoleOrderBy
    ): [umgmt_ResourceRole]
    umgmt_RowLevelPolicyById(id: String!): umgmt_RowLevelPolicy
    umgmt_RowLevelPolicyCount(
        "expressions to compare umgmt_RowLevelPolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_RowLevelPolicyFilterCondition]
    ): Long
    umgmt_RowLevelPolicyList(
        "expressions to compare umgmt_RowLevelPolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_RowLevelPolicyFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_umgmt_RowLevelPolicyOrderBy
    ): [umgmt_RowLevelPolicy]
    umgmt_RowLevelRoleById(id: String!): umgmt_RowLevelRole
    umgmt_RowLevelRoleCount(
        "expressions to compare umgmt_RowLevelRole objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_RowLevelRoleFilterCondition]
    ): Long
    umgmt_RowLevelRoleList(
        "expressions to compare umgmt_RowLevelRole objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_RowLevelRoleFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_umgmt_RowLevelRoleOrderBy
    ): [umgmt_RowLevelRole]
    umgmt_ScreenPolicyById(id: String!): umgmt_ScreenPolicy
    umgmt_ScreenPolicyCount(
        "expressions to compare umgmt_ScreenPolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_ScreenPolicyFilterCondition]
    ): Long
    umgmt_ScreenPolicyList(
        "expressions to compare umgmt_ScreenPolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_ScreenPolicyFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_umgmt_ScreenPolicyOrderBy
    ): [umgmt_ScreenPolicy]
    umgmt_SpecificPolicyById(id: String!): umgmt_SpecificPolicy
    umgmt_SpecificPolicyCount(
        "expressions to compare umgmt_SpecificPolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_SpecificPolicyFilterCondition]
    ): Long
    umgmt_SpecificPolicyList(
        "expressions to compare umgmt_SpecificPolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_SpecificPolicyFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_umgmt_SpecificPolicyOrderBy
    ): [umgmt_SpecificPolicy]
    umgmt_UserById(id: String!): umgmt_User
    umgmt_UserCount(
        "expressions to compare umgmt_User objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_UserFilterCondition]
    ): Long
    umgmt_UserList(
        "expressions to compare umgmt_User objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_UserFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_umgmt_UserOrderBy
    ): [umgmt_User]
}

type gql_MessageDetail {
    key: String
    value: String
}

type sec_Permission {
    target: String
    value: Int
}

type sec_PermissionConfig {
    entities: [sec_Permission]
    entityAttributes: [sec_Permission]
    specifics: [sec_Permission]
}

type sec_ResourcePolicyEntity {
    _instanceName: String
    action: String
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    effect: String
    id: UUID
    policyGroup: String
    resource: String
    role: sec_ResourceRoleEntity
    type: String
    updateTs: DateTime
    updatedBy: String
    version: Int
}

type sec_ResourceRoleEntity {
    _instanceName: String
    childRoles: String
    code: String
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    description: String
    id: UUID
    name: String
    resourcePolicies: [sec_ResourcePolicyEntity]
    scopes: String
    sysTenantId: String
    updateTs: DateTime
    updatedBy: String
    version: Int
}

type sec_RoleAssignmentEntity {
    _instanceName: String
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    id: UUID
    roleCode: String
    roleType: String
    updateTs: DateTime
    updatedBy: String
    username: String
    version: Int
}

type sec_RowLevelPolicyEntity {
    _instanceName: String
    action: RowLevelPolicyAction
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    entityName: String
    id: UUID
    joinClause: String
    role: sec_RowLevelRoleEntity
    script: String
    type: RowLevelPolicyType
    updateTs: DateTime
    updatedBy: String
    version: Int
    whereClause: String
}

type sec_RowLevelRoleEntity {
    _instanceName: String
    childRoles: String
    code: String
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    description: String
    id: UUID
    name: String
    rowLevelPolicies: [sec_RowLevelPolicyEntity]
    sysTenantId: String
    updateTs: DateTime
    updatedBy: String
    version: Int
}

type sec_UserSubstitutionEntity {
    _instanceName: String
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    endDate: Date
    id: UUID
    startDate: Date
    substitutedUsername: String
    updateTs: DateTime
    updatedBy: String
    username: String
    version: Int
}

type ui_FilterConfiguration {
    _instanceName: String
    componentId: String
    configurationId: String
    defaultForAll: Boolean
    defaultForMe: Boolean
    id: UUID
    name: String
    rootCondition: String
    sysTenantId: String
    username: String
}

type ui_Setting {
    _instanceName: String
    createTs: DateTime
    createdBy: String
    id: UUID
    name: String
    username: String
    value: String
}

type ui_TablePresentation {
    _instanceName: String
    autoSave: Boolean
    componentId: String
    createTs: DateTime
    createdBy: String
    id: UUID
    isDefault: Boolean
    name: String
    settings: String
    sysTenantId: String
    updateTs: DateTime
    updatedBy: String
    username: String
}

type umgmt_EntityAttributePolicy {
    _instanceName: String
    action: AttributePolicyType
    attribute: String
    entityName: String
    id: UUID
    role: umgmt_ResourceRole
    version: Int
}

type umgmt_EntityPolicy {
    _instanceName: String
    action: EntityPolicyType
    entityName: String
    id: UUID
    role: umgmt_ResourceRole
    version: Int
}

type umgmt_MenuPolicy {
    _instanceName: String
    id: UUID
    resource: String
    role: umgmt_ResourceRole
    version: Int
}

type umgmt_ResourceRole {
    _instanceName: String
    childRoles: String
    code: String
    description: String
    entityAttributePolicies: [umgmt_EntityAttributePolicy]
    entityPolicies: [umgmt_EntityPolicy]
    id: String
    menuPolicies: [umgmt_MenuPolicy]
    name: String
    readOnly: Boolean
    scopes: String
    screenPolicies: [umgmt_ScreenPolicy]
    specificPolicies: [umgmt_SpecificPolicy]
    version: Int
}

type umgmt_RowLevelPolicy {
    _instanceName: String
    action: RowLevelAction
    entityName: String
    id: UUID
    joinClause: String
    role: umgmt_RowLevelRole
    script: String
    type: RowLevelType
    version: Int
    whereClause: String
}

type umgmt_RowLevelRole {
    _instanceName: String
    childRoles: String
    code: String
    description: String
    id: String
    name: String
    rowLevelPolicies: [umgmt_RowLevelPolicy]
    version: Int
}

type umgmt_ScreenPolicy {
    _instanceName: String
    id: UUID
    resource: String
    role: umgmt_ResourceRole
    version: Int
}

type umgmt_SpecificPolicy {
    _instanceName: String
    id: UUID
    resource: String
    role: umgmt_ResourceRole
    version: Int
}

type umgmt_User {
    _instanceName: String
    active: Boolean
    email: String
    firstName: String
    id: UUID
    lastName: String
    password: String
    timeZoneId: String
    username: String
    version: Int
}

enum AttributePolicyType {
    MODIFY
    VIEW
}

enum EntityPolicyType {
    ALL
    CREATE
    DELETE
    READ
    UPDATE
}

enum RowLevelAction {
    CREATE
    DELETE
    READ
    UPDATE
}

enum RowLevelPolicyAction {
    CREATE
    DELETE
    READ
    UPDATE
}

enum RowLevelPolicyType {
    JPQL
    PREDICATE
}

enum RowLevelType {
    JPQL
    PREDICATE
}

enum SortOrder {
    ASC
    DESC
}

"BigDecimal"
scalar BigDecimal

"BigInteger"
scalar BigInteger

"Byte"
scalar Byte

"Char"
scalar Char

"Date"
scalar Date

"DateTime"
scalar DateTime

"LocalDate"
scalar LocalDate

"LocalDateTime"
scalar LocalDateTime

"LocalTime"
scalar LocalTime

"Long"
scalar Long

"OffsetDateTime"
scalar OffsetDateTime

"OffsetTime"
scalar OffsetTime

"Short"
scalar Short

"Time"
scalar Time

"UUID"
scalar UUID

"Void"
scalar Void

"expression to compare columns of type BigDecimal. All fields are combined with logical 'AND'"
input inp_BigDecimalFilterCondition {
    "equals"
    _eq: BigDecimal
    "greater than"
    _gt: BigDecimal
    "greater than or equals"
    _gte: BigDecimal
    "in list"
    _in: [BigDecimal]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: BigDecimal
    "less than or equals"
    _lte: BigDecimal
    "not equals"
    _neq: BigDecimal
    "not in list"
    _notIn: [BigDecimal]
}

"expression to compare columns of type BigInteger. All fields are combined with logical 'AND'"
input inp_BigIntegerFilterCondition {
    "equals"
    _eq: BigInteger
    "greater than"
    _gt: BigInteger
    "greater than or equals"
    _gte: BigInteger
    "in list"
    _in: [BigInteger]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: BigInteger
    "less than or equals"
    _lte: BigInteger
    "not equals"
    _neq: BigInteger
    "not in list"
    _notIn: [BigInteger]
}

"expression to compare columns of type Boolean. All fields are combined with logical 'AND'"
input inp_BooleanFilterCondition {
    "equals"
    _eq: Boolean
    "is null"
    _isNull: Boolean
    "not equals"
    _neq: Boolean
}

"expression to compare columns of type Char. All fields are combined with logical 'AND'"
input inp_CharFilterCondition {
    "equals"
    _eq: Char
    "in list"
    _in: [Char]
    "is null"
    _isNull: Boolean
    "not equals"
    _neq: Char
    "not in list"
    _notIn: [Char]
}

"expression to compare columns of type Date. All fields are combined with logical 'AND'"
input inp_DateFilterCondition {
    "equals"
    _eq: Date
    "greater than"
    _gt: Date
    "greater than or equals"
    _gte: Date
    "in list"
    _in: [Date]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: Date
    "less than or equals"
    _lte: Date
    "not equals"
    _neq: Date
    "not in list"
    _notIn: [Date]
}

"expression to compare columns of type DateTime. All fields are combined with logical 'AND'"
input inp_DateTimeFilterCondition {
    "equals"
    _eq: DateTime
    "greater than"
    _gt: DateTime
    "greater than or equals"
    _gte: DateTime
    "in list"
    _in: [DateTime]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: DateTime
    "less than or equals"
    _lte: DateTime
    "not equals"
    _neq: DateTime
    "not in list"
    _notIn: [DateTime]
}

"expression to compare columns of type Float. All fields are combined with logical 'AND'"
input inp_FloatFilterCondition {
    "equals"
    _eq: Float
    "greater than"
    _gt: Float
    "greater than or equals"
    _gte: Float
    "in list"
    _in: [Float]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: Float
    "less than or equals"
    _lte: Float
    "not equals"
    _neq: Float
    "not in list"
    _notIn: [Float]
}

"expression to compare columns of type Int. All fields are combined with logical 'AND'"
input inp_IntFilterCondition {
    "equals"
    _eq: Int
    "greater than"
    _gt: Int
    "greater than or equals"
    _gte: Int
    "in list"
    _in: [Int]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: Int
    "less than or equals"
    _lte: Int
    "not equals"
    _neq: Int
    "not in list"
    _notIn: [Int]
}

"expression to compare columns of type LocalDate. All fields are combined with logical 'AND'"
input inp_LocalDateFilterCondition {
    "equals"
    _eq: LocalDate
    "greater than"
    _gt: LocalDate
    "greater than or equals"
    _gte: LocalDate
    "in list"
    _in: [LocalDate]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: LocalDate
    "less than or equals"
    _lte: LocalDate
    "not equals"
    _neq: LocalDate
    "not in list"
    _notIn: [LocalDate]
}

"expression to compare columns of type LocalDateTime. All fields are combined with logical 'AND'"
input inp_LocalDateTimeFilterCondition {
    "equals"
    _eq: LocalDateTime
    "greater than"
    _gt: LocalDateTime
    "greater than or equals"
    _gte: LocalDateTime
    "in list"
    _in: [LocalDateTime]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: LocalDateTime
    "less than or equals"
    _lte: LocalDateTime
    "not equals"
    _neq: LocalDateTime
    "not in list"
    _notIn: [LocalDateTime]
}

"expression to compare columns of type LocalTime. All fields are combined with logical 'AND'"
input inp_LocalTimeFilterCondition {
    "equals"
    _eq: LocalTime
    "greater than"
    _gt: LocalTime
    "greater than or equals"
    _gte: LocalTime
    "is null"
    _isNull: Boolean
    "less that"
    _lt: LocalTime
    "less than or equals"
    _lte: LocalTime
    "not equals"
    _neq: LocalTime
}

"expression to compare columns of type Long. All fields are combined with logical 'AND'"
input inp_LongFilterCondition {
    "equals"
    _eq: Long
    "greater than"
    _gt: Long
    "greater than or equals"
    _gte: Long
    "in list"
    _in: [Long]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: Long
    "less than or equals"
    _lte: Long
    "not equals"
    _neq: Long
    "not in list"
    _notIn: [Long]
}

"expression to compare columns of type OffsetDateTime. All fields are combined with logical 'AND'"
input inp_OffsetDateTimeFilterCondition {
    "equals"
    _eq: OffsetDateTime
    "greater than"
    _gt: OffsetDateTime
    "greater than or equals"
    _gte: OffsetDateTime
    "in list"
    _in: [OffsetDateTime]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: OffsetDateTime
    "less than or equals"
    _lte: OffsetDateTime
    "not equals"
    _neq: OffsetDateTime
    "not in list"
    _notIn: [OffsetDateTime]
}

"expression to compare columns of type OffsetTime. All fields are combined with logical 'AND'"
input inp_OffsetTimeFilterCondition {
    "equals"
    _eq: OffsetTime
    "greater than"
    _gt: OffsetTime
    "greater than or equals"
    _gte: OffsetTime
    "is null"
    _isNull: Boolean
    "less that"
    _lt: OffsetTime
    "less than or equals"
    _lte: OffsetTime
    "not equals"
    _neq: OffsetTime
}

"expression to compare columns of type Short. All fields are combined with logical 'AND'"
input inp_ShortFilterCondition {
    "equals"
    _eq: Short
    "greater than"
    _gt: Short
    "greater than or equals"
    _gte: Short
    "in list"
    _in: [Short]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: Short
    "less than or equals"
    _lte: Short
    "not equals"
    _neq: Short
    "not in list"
    _notIn: [Short]
}

"expression to compare columns of type String. All fields are combined with logical 'AND'"
input inp_StringFilterCondition {
    "contains substring"
    _contains: String
    "ends with substring"
    _endsWith: String
    "equals"
    _eq: String
    "in list"
    _in: [String]
    "is null"
    _isNull: Boolean
    "not equals"
    _neq: String
    "not contains substring"
    _notContains: String
    "not in list"
    _notIn: [String]
    "starts with substring"
    _startsWith: String
}

"expression to compare columns of type Time. All fields are combined with logical 'AND'"
input inp_TimeFilterCondition {
    "equals"
    _eq: Time
    "greater than"
    _gt: Time
    "greater than or equals"
    _gte: Time
    "is null"
    _isNull: Boolean
    "less that"
    _lt: Time
    "less than or equals"
    _lte: Time
    "not equals"
    _neq: Time
}

"expression to compare columns of type UUID. All fields are combined with logical 'AND'"
input inp_UUIDFilterCondition {
    "equals"
    _eq: UUID
    "in list"
    _in: [UUID]
    "is null"
    _isNull: Boolean
    "not equals"
    _neq: UUID
    "not in list"
    _notIn: [UUID]
}

input inp_sec_ResourcePolicyEntity {
    action: String
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    effect: String
    id: UUID
    policyGroup: String
    resource: String
    role: inp_sec_ResourceRoleEntity
    type: String
    updateTs: DateTime
    updatedBy: String
    version: Int
}

input inp_sec_ResourcePolicyEntityFilterCondition {
    AND: [inp_sec_ResourcePolicyEntityFilterCondition]
    OR: [inp_sec_ResourcePolicyEntityFilterCondition]
    "is null"
    _isNull: Boolean
    action: [inp_StringFilterCondition]
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    deleteTs: [inp_DateTimeFilterCondition]
    deletedBy: [inp_StringFilterCondition]
    effect: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    policyGroup: [inp_StringFilterCondition]
    resource: [inp_StringFilterCondition]
    role: [inp_sec_ResourceRoleEntityFilterCondition]
    type: [inp_StringFilterCondition]
    updateTs: [inp_DateTimeFilterCondition]
    updatedBy: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_sec_ResourcePolicyEntityOrderBy {
    action: [SortOrder]
    createTs: SortOrder
    createdBy: [SortOrder]
    deleteTs: SortOrder
    deletedBy: [SortOrder]
    effect: [SortOrder]
    id: SortOrder
    policyGroup: [SortOrder]
    resource: [SortOrder]
    role: inp_sec_ResourceRoleEntityOrderBy
    type: [SortOrder]
    updateTs: SortOrder
    updatedBy: [SortOrder]
    version: SortOrder
}

input inp_sec_ResourceRoleEntity {
    childRoles: String
    code: String
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    description: String
    id: UUID
    name: String
    resourcePolicies: [inp_sec_ResourcePolicyEntity]
    scopes: String
    sysTenantId: String
    updateTs: DateTime
    updatedBy: String
    version: Int
}

input inp_sec_ResourceRoleEntityFilterCondition {
    AND: [inp_sec_ResourceRoleEntityFilterCondition]
    OR: [inp_sec_ResourceRoleEntityFilterCondition]
    "is null"
    _isNull: Boolean
    childRoles: [inp_StringFilterCondition]
    code: [inp_StringFilterCondition]
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    deleteTs: [inp_DateTimeFilterCondition]
    deletedBy: [inp_StringFilterCondition]
    description: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    name: [inp_StringFilterCondition]
    scopes: [inp_StringFilterCondition]
    sysTenantId: [inp_StringFilterCondition]
    updateTs: [inp_DateTimeFilterCondition]
    updatedBy: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_sec_ResourceRoleEntityOrderBy {
    childRoles: [SortOrder]
    code: [SortOrder]
    createTs: SortOrder
    createdBy: [SortOrder]
    deleteTs: SortOrder
    deletedBy: [SortOrder]
    description: [SortOrder]
    id: SortOrder
    name: [SortOrder]
    scopes: [SortOrder]
    sysTenantId: [SortOrder]
    updateTs: SortOrder
    updatedBy: [SortOrder]
    version: SortOrder
}

input inp_sec_RoleAssignmentEntity {
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    id: UUID
    roleCode: String
    roleType: String
    updateTs: DateTime
    updatedBy: String
    username: String
    version: Int
}

input inp_sec_RoleAssignmentEntityFilterCondition {
    AND: [inp_sec_RoleAssignmentEntityFilterCondition]
    OR: [inp_sec_RoleAssignmentEntityFilterCondition]
    "is null"
    _isNull: Boolean
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    deleteTs: [inp_DateTimeFilterCondition]
    deletedBy: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    roleCode: [inp_StringFilterCondition]
    roleType: [inp_StringFilterCondition]
    updateTs: [inp_DateTimeFilterCondition]
    updatedBy: [inp_StringFilterCondition]
    username: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_sec_RoleAssignmentEntityOrderBy {
    createTs: SortOrder
    createdBy: [SortOrder]
    deleteTs: SortOrder
    deletedBy: [SortOrder]
    id: SortOrder
    roleCode: [SortOrder]
    roleType: [SortOrder]
    updateTs: SortOrder
    updatedBy: [SortOrder]
    username: [SortOrder]
    version: SortOrder
}

input inp_sec_RowLevelPolicyEntity {
    action: RowLevelPolicyAction
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    entityName: String
    id: UUID
    joinClause: String
    role: inp_sec_RowLevelRoleEntity
    script: String
    type: RowLevelPolicyType
    updateTs: DateTime
    updatedBy: String
    version: Int
    whereClause: String
}

input inp_sec_RowLevelPolicyEntityFilterCondition {
    AND: [inp_sec_RowLevelPolicyEntityFilterCondition]
    OR: [inp_sec_RowLevelPolicyEntityFilterCondition]
    "is null"
    _isNull: Boolean
    action: [String]
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    deleteTs: [inp_DateTimeFilterCondition]
    deletedBy: [inp_StringFilterCondition]
    entityName: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    joinClause: [inp_StringFilterCondition]
    role: [inp_sec_RowLevelRoleEntityFilterCondition]
    script: [inp_StringFilterCondition]
    type: [String]
    updateTs: [inp_DateTimeFilterCondition]
    updatedBy: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
    whereClause: [inp_StringFilterCondition]
}

input inp_sec_RowLevelPolicyEntityOrderBy {
    action: [String]
    createTs: SortOrder
    createdBy: [SortOrder]
    deleteTs: SortOrder
    deletedBy: [SortOrder]
    entityName: [SortOrder]
    id: SortOrder
    joinClause: [SortOrder]
    role: inp_sec_RowLevelRoleEntityOrderBy
    script: [SortOrder]
    type: [String]
    updateTs: SortOrder
    updatedBy: [SortOrder]
    version: SortOrder
    whereClause: [SortOrder]
}

input inp_sec_RowLevelRoleEntity {
    childRoles: String
    code: String
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    description: String
    id: UUID
    name: String
    rowLevelPolicies: [inp_sec_RowLevelPolicyEntity]
    sysTenantId: String
    updateTs: DateTime
    updatedBy: String
    version: Int
}

input inp_sec_RowLevelRoleEntityFilterCondition {
    AND: [inp_sec_RowLevelRoleEntityFilterCondition]
    OR: [inp_sec_RowLevelRoleEntityFilterCondition]
    "is null"
    _isNull: Boolean
    childRoles: [inp_StringFilterCondition]
    code: [inp_StringFilterCondition]
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    deleteTs: [inp_DateTimeFilterCondition]
    deletedBy: [inp_StringFilterCondition]
    description: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    name: [inp_StringFilterCondition]
    sysTenantId: [inp_StringFilterCondition]
    updateTs: [inp_DateTimeFilterCondition]
    updatedBy: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_sec_RowLevelRoleEntityOrderBy {
    childRoles: [SortOrder]
    code: [SortOrder]
    createTs: SortOrder
    createdBy: [SortOrder]
    deleteTs: SortOrder
    deletedBy: [SortOrder]
    description: [SortOrder]
    id: SortOrder
    name: [SortOrder]
    sysTenantId: [SortOrder]
    updateTs: SortOrder
    updatedBy: [SortOrder]
    version: SortOrder
}

input inp_sec_UserSubstitutionEntity {
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    endDate: Date
    id: UUID
    startDate: Date
    substitutedUsername: String
    updateTs: DateTime
    updatedBy: String
    username: String
    version: Int
}

input inp_sec_UserSubstitutionEntityFilterCondition {
    AND: [inp_sec_UserSubstitutionEntityFilterCondition]
    OR: [inp_sec_UserSubstitutionEntityFilterCondition]
    "is null"
    _isNull: Boolean
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    deleteTs: [inp_DateTimeFilterCondition]
    deletedBy: [inp_StringFilterCondition]
    endDate: [inp_DateFilterCondition]
    id: [inp_UUIDFilterCondition]
    startDate: [inp_DateFilterCondition]
    substitutedUsername: [inp_StringFilterCondition]
    updateTs: [inp_DateTimeFilterCondition]
    updatedBy: [inp_StringFilterCondition]
    username: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_sec_UserSubstitutionEntityOrderBy {
    createTs: SortOrder
    createdBy: [SortOrder]
    deleteTs: SortOrder
    deletedBy: [SortOrder]
    endDate: SortOrder
    id: SortOrder
    startDate: SortOrder
    substitutedUsername: [SortOrder]
    updateTs: SortOrder
    updatedBy: [SortOrder]
    username: [SortOrder]
    version: SortOrder
}

input inp_ui_FilterConfiguration {
    componentId: String
    configurationId: String
    defaultForAll: Boolean
    defaultForMe: Boolean
    id: UUID
    name: String
    rootCondition: String
    sysTenantId: String
    username: String
}

input inp_ui_FilterConfigurationFilterCondition {
    AND: [inp_ui_FilterConfigurationFilterCondition]
    OR: [inp_ui_FilterConfigurationFilterCondition]
    "is null"
    _isNull: Boolean
    componentId: [inp_StringFilterCondition]
    configurationId: [inp_StringFilterCondition]
    defaultForAll: [inp_BooleanFilterCondition]
    defaultForMe: [inp_BooleanFilterCondition]
    id: [inp_UUIDFilterCondition]
    name: [inp_StringFilterCondition]
    rootCondition: [inp_StringFilterCondition]
    sysTenantId: [inp_StringFilterCondition]
    username: [inp_StringFilterCondition]
}

input inp_ui_FilterConfigurationOrderBy {
    componentId: [SortOrder]
    configurationId: [SortOrder]
    defaultForAll: SortOrder
    defaultForMe: SortOrder
    id: SortOrder
    name: [SortOrder]
    sysTenantId: [SortOrder]
    username: [SortOrder]
}

input inp_ui_Setting {
    createTs: DateTime
    createdBy: String
    id: UUID
    name: String
    username: String
    value: String
}

input inp_ui_SettingFilterCondition {
    AND: [inp_ui_SettingFilterCondition]
    OR: [inp_ui_SettingFilterCondition]
    "is null"
    _isNull: Boolean
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    name: [inp_StringFilterCondition]
    username: [inp_StringFilterCondition]
    value: [inp_StringFilterCondition]
}

input inp_ui_SettingOrderBy {
    createTs: SortOrder
    createdBy: [SortOrder]
    id: SortOrder
    name: [SortOrder]
    username: [SortOrder]
    value: [SortOrder]
}

input inp_ui_TablePresentation {
    autoSave: Boolean
    componentId: String
    createTs: DateTime
    createdBy: String
    id: UUID
    isDefault: Boolean
    name: String
    settings: String
    sysTenantId: String
    updateTs: DateTime
    updatedBy: String
    username: String
}

input inp_ui_TablePresentationFilterCondition {
    AND: [inp_ui_TablePresentationFilterCondition]
    OR: [inp_ui_TablePresentationFilterCondition]
    "is null"
    _isNull: Boolean
    autoSave: [inp_BooleanFilterCondition]
    componentId: [inp_StringFilterCondition]
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    isDefault: [inp_BooleanFilterCondition]
    name: [inp_StringFilterCondition]
    settings: [inp_StringFilterCondition]
    sysTenantId: [inp_StringFilterCondition]
    updateTs: [inp_DateTimeFilterCondition]
    updatedBy: [inp_StringFilterCondition]
    username: [inp_StringFilterCondition]
}

input inp_ui_TablePresentationOrderBy {
    autoSave: SortOrder
    componentId: [SortOrder]
    createTs: SortOrder
    createdBy: [SortOrder]
    id: SortOrder
    isDefault: SortOrder
    name: [SortOrder]
    settings: [SortOrder]
    sysTenantId: [SortOrder]
    updateTs: SortOrder
    updatedBy: [SortOrder]
    username: [SortOrder]
}

input inp_umgmt_EntityAttributePolicy {
    action: AttributePolicyType
    attribute: String
    entityName: String
    id: UUID
    role: inp_umgmt_ResourceRole
    version: Int
}

input inp_umgmt_EntityAttributePolicyFilterCondition {
    AND: [inp_umgmt_EntityAttributePolicyFilterCondition]
    OR: [inp_umgmt_EntityAttributePolicyFilterCondition]
    "is null"
    _isNull: Boolean
    action: [String]
    attribute: [inp_StringFilterCondition]
    entityName: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    role: [inp_umgmt_ResourceRoleFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_umgmt_EntityAttributePolicyOrderBy {
    action: [String]
    attribute: [SortOrder]
    entityName: [SortOrder]
    id: SortOrder
    role: inp_umgmt_ResourceRoleOrderBy
    version: SortOrder
}

input inp_umgmt_EntityPolicy {
    action: EntityPolicyType
    entityName: String
    id: UUID
    role: inp_umgmt_ResourceRole
    version: Int
}

input inp_umgmt_EntityPolicyFilterCondition {
    AND: [inp_umgmt_EntityPolicyFilterCondition]
    OR: [inp_umgmt_EntityPolicyFilterCondition]
    "is null"
    _isNull: Boolean
    action: [String]
    entityName: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    role: [inp_umgmt_ResourceRoleFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_umgmt_EntityPolicyOrderBy {
    action: [String]
    entityName: [SortOrder]
    id: SortOrder
    role: inp_umgmt_ResourceRoleOrderBy
    version: SortOrder
}

input inp_umgmt_MenuPolicy {
    id: UUID
    resource: String
    role: inp_umgmt_ResourceRole
    version: Int
}

input inp_umgmt_MenuPolicyFilterCondition {
    AND: [inp_umgmt_MenuPolicyFilterCondition]
    OR: [inp_umgmt_MenuPolicyFilterCondition]
    "is null"
    _isNull: Boolean
    id: [inp_UUIDFilterCondition]
    resource: [inp_StringFilterCondition]
    role: [inp_umgmt_ResourceRoleFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_umgmt_MenuPolicyOrderBy {
    id: SortOrder
    resource: [SortOrder]
    role: inp_umgmt_ResourceRoleOrderBy
    version: SortOrder
}

input inp_umgmt_ResourceRole {
    childRoles: String
    code: String
    description: String
    entityAttributePolicies: [inp_umgmt_EntityAttributePolicy]
    entityPolicies: [inp_umgmt_EntityPolicy]
    id: String
    menuPolicies: [inp_umgmt_MenuPolicy]
    name: String
    readOnly: Boolean
    scopes: String
    screenPolicies: [inp_umgmt_ScreenPolicy]
    specificPolicies: [inp_umgmt_SpecificPolicy]
    version: Int
}

input inp_umgmt_ResourceRoleFilterCondition {
    AND: [inp_umgmt_ResourceRoleFilterCondition]
    OR: [inp_umgmt_ResourceRoleFilterCondition]
    "is null"
    _isNull: Boolean
    childRoles: [inp_StringFilterCondition]
    code: [inp_StringFilterCondition]
    description: [inp_StringFilterCondition]
    id: [inp_StringFilterCondition]
    name: [inp_StringFilterCondition]
    readOnly: [inp_BooleanFilterCondition]
    scopes: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_umgmt_ResourceRoleOrderBy {
    childRoles: [SortOrder]
    code: [SortOrder]
    description: [SortOrder]
    id: [SortOrder]
    name: [SortOrder]
    readOnly: SortOrder
    scopes: [SortOrder]
    version: SortOrder
}

input inp_umgmt_RowLevelPolicy {
    action: RowLevelAction
    entityName: String
    id: UUID
    joinClause: String
    role: inp_umgmt_RowLevelRole
    script: String
    type: RowLevelType
    version: Int
    whereClause: String
}

input inp_umgmt_RowLevelPolicyFilterCondition {
    AND: [inp_umgmt_RowLevelPolicyFilterCondition]
    OR: [inp_umgmt_RowLevelPolicyFilterCondition]
    "is null"
    _isNull: Boolean
    action: [String]
    entityName: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    joinClause: [inp_StringFilterCondition]
    role: [inp_umgmt_RowLevelRoleFilterCondition]
    script: [inp_StringFilterCondition]
    type: [String]
    version: [inp_IntFilterCondition]
    whereClause: [inp_StringFilterCondition]
}

input inp_umgmt_RowLevelPolicyOrderBy {
    action: [String]
    entityName: [SortOrder]
    id: SortOrder
    joinClause: [SortOrder]
    role: inp_umgmt_RowLevelRoleOrderBy
    script: [SortOrder]
    type: [String]
    version: SortOrder
    whereClause: [SortOrder]
}

input inp_umgmt_RowLevelRole {
    childRoles: String
    code: String
    description: String
    id: String
    name: String
    rowLevelPolicies: [inp_umgmt_RowLevelPolicy]
    version: Int
}

input inp_umgmt_RowLevelRoleFilterCondition {
    AND: [inp_umgmt_RowLevelRoleFilterCondition]
    OR: [inp_umgmt_RowLevelRoleFilterCondition]
    "is null"
    _isNull: Boolean
    childRoles: [inp_StringFilterCondition]
    code: [inp_StringFilterCondition]
    description: [inp_StringFilterCondition]
    id: [inp_StringFilterCondition]
    name: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_umgmt_RowLevelRoleOrderBy {
    childRoles: [SortOrder]
    code: [SortOrder]
    description: [SortOrder]
    id: [SortOrder]
    name: [SortOrder]
    version: SortOrder
}

input inp_umgmt_ScreenPolicy {
    id: UUID
    resource: String
    role: inp_umgmt_ResourceRole
    version: Int
}

input inp_umgmt_ScreenPolicyFilterCondition {
    AND: [inp_umgmt_ScreenPolicyFilterCondition]
    OR: [inp_umgmt_ScreenPolicyFilterCondition]
    "is null"
    _isNull: Boolean
    id: [inp_UUIDFilterCondition]
    resource: [inp_StringFilterCondition]
    role: [inp_umgmt_ResourceRoleFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_umgmt_ScreenPolicyOrderBy {
    id: SortOrder
    resource: [SortOrder]
    role: inp_umgmt_ResourceRoleOrderBy
    version: SortOrder
}

input inp_umgmt_SpecificPolicy {
    id: UUID
    resource: String
    role: inp_umgmt_ResourceRole
    version: Int
}

input inp_umgmt_SpecificPolicyFilterCondition {
    AND: [inp_umgmt_SpecificPolicyFilterCondition]
    OR: [inp_umgmt_SpecificPolicyFilterCondition]
    "is null"
    _isNull: Boolean
    id: [inp_UUIDFilterCondition]
    resource: [inp_StringFilterCondition]
    role: [inp_umgmt_ResourceRoleFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_umgmt_SpecificPolicyOrderBy {
    id: SortOrder
    resource: [SortOrder]
    role: inp_umgmt_ResourceRoleOrderBy
    version: SortOrder
}

input inp_umgmt_User {
    active: Boolean
    email: String
    firstName: String
    id: UUID
    lastName: String
    password: String
    timeZoneId: String
    username: String
    version: Int
}

input inp_umgmt_UserFilterCondition {
    AND: [inp_umgmt_UserFilterCondition]
    OR: [inp_umgmt_UserFilterCondition]
    "is null"
    _isNull: Boolean
    active: [inp_BooleanFilterCondition]
    email: [inp_StringFilterCondition]
    firstName: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    lastName: [inp_StringFilterCondition]
    password: [inp_StringFilterCondition]
    timeZoneId: [inp_StringFilterCondition]
    username: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_umgmt_UserOrderBy {
    active: SortOrder
    email: [SortOrder]
    firstName: [SortOrder]
    id: SortOrder
    lastName: [SortOrder]
    password: [SortOrder]
    timeZoneId: [SortOrder]
    username: [SortOrder]
    version: SortOrder
}
